// Top-level build file where you can add configuration options common to all sub-projects/modules.
/**
 * The buildscript block is where you configure the repositories and
 * dependencies for Gradle itselfâ€”meaning, you should not include dependencies
 * for your modules here. For example, this block includes the Android plugin for
 * Gradle as a dependency because it provides the additional instructions Gradle
 * needs to build Android app modules.
 */
buildscript{
    ext.kotlin_version = '1.3.30'
    ext.kotlin_version = '1.3.21'
    ext.kotlin_version = '1.3.50'
    /**
     * The repositories block configures the repositories Gradle uses to
     * search or download the dependencies. Gradle pre-configures support for remote
     * repositories such as JCenter, Maven Central, and Ivy. You can also use local
     * repositories or define your own remote repositories. The code below defines
     * JCenter as the repository Gradle should use to look for its dependencies.
     *
     * New projects created using Android Studio 3.0 and higher also include
     * Google's Maven repository.
     */
    repositories {
        google()
        jcenter()
    }
    dependencies {
        apply plugin: 'java'
        apply plugin: 'idea'
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
/**
 * The allprojects block is where you configure the repositories and
 * dependencies used by all modules in your project, such as third-party plugins
 * or libraries. However, you should configure module-specific dependencies in
 * each module-level build.gradle file. For new projects, Android Studio
 * includes JCenter and Google's Maven repository by default, but it does not
 * configure any dependencies (unless you select a template that requires some).
 */
allprojects {
    repositories {
        google()
        jcenter()
    }
}

// This block encapsulates custom properties and makes them available to all
// modules in the project.
ext {
    // The following are only a few examples of the types of properties you can define.
    compileSdkVersion = 29
    // You can also create properties to specify versions for dependencies.
    // Having consistent versions between modules can avoid conflicts with behavior.
    supportLibVersion = "28.0.3"
}
//
//task clean(type: Delete) {
//    delete rootProject.buildDir
//}
//
//dependencies {
//    implementation project(':app')
//    implementation project(':astramultichosewithdatacalendar')
//    implementation project(':organizerdb')
//}